/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "ISO14827-2"
 * 	found in "../asn1c/J2735_201603DA+ITSK4-0.4_fix.update"
 * 	`asn1c -no-gen-example -fcompound-names -funnamed-unions -pdu=MessageFrame`
 */

#ifndef	_Registered_H_
#define	_Registered_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <constr_SEQUENCE.h>
#include <BIT_STRING.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum Registered_PR {
	Registered_PR_NOTHING,	/* No components present */
	Registered_PR_continuous,
	Registered_PR_daily
} Registered_PR;
typedef enum Registered__daily__datexRegistered_DaysOfWeek_cd {
	Registered__daily__datexRegistered_DaysOfWeek_cd_other	= 0,
	Registered__daily__datexRegistered_DaysOfWeek_cd_sunday	= 1,
	Registered__daily__datexRegistered_DaysOfWeek_cd_monday	= 2,
	Registered__daily__datexRegistered_DaysOfWeek_cd_tuesday	= 3,
	Registered__daily__datexRegistered_DaysOfWeek_cd_wednesday	= 4,
	Registered__daily__datexRegistered_DaysOfWeek_cd_thursday	= 5,
	Registered__daily__datexRegistered_DaysOfWeek_cd_friday	= 6,
	Registered__daily__datexRegistered_DaysOfWeek_cd_saturday	= 7
} e_Registered__daily__datexRegistered_DaysOfWeek_cd;

/* Forward declarations */
struct Time;

/* Registered */
typedef struct Registered {
	Registered_PR present;
	union {
		struct Registered__continuous {
			long	 datexRegistered_UpdateDelay_qty	/* DEFAULT 0 */;
			struct Time	*datexRegistered_StartTime	/* OPTIONAL */;
			struct Time	*datexRegistered_EndTime	/* OPTIONAL */;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} continuous;
		struct Registered__daily {
			long	 datexRegistered_UpdateDelay_qty	/* DEFAULT 0 */;
			BIT_STRING_t	 datexRegistered_DaysOfWeek_cd;
			struct Time	*datexRegistered_StartDate	/* OPTIONAL */;
			struct Time	*datexRegistered_EndDate	/* OPTIONAL */;
			struct Time	*datexRegistered_StartTime	/* OPTIONAL */;
			long	*datexRegistered_Duration_qty	/* OPTIONAL */;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} daily;
	};
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Registered_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Registered;
extern asn_CHOICE_specifics_t asn_SPC_Registered_specs_1;
extern asn_TYPE_member_t asn_MBR_Registered_1[2];
extern asn_per_constraints_t asn_PER_type_Registered_constr_1;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "Time.h"

#endif	/* _Registered_H_ */
#include <asn_internal.h>
